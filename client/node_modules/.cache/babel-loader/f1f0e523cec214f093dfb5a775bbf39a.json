{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mike\\\\my-app\\\\client\\\\src\\\\components\\\\pages\\\\meetstructure\\\\AudioPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport { FaPlay } from \"react-icons/fa\";\nimport { FaPause } from \"react-icons/fa\";\nimport { UserContext } from \"../../../UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AudioPlayer(props) {\n  _s();\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [newAudioPlaying, setNewAudioPlaying] = useState(false);\n  const user = useContext(UserContext);\n  const audioPlayer = useRef();\n\n  const togglePlayPause = () => {\n    audioPlayer.current.play(); // const prevValue = isPlaying\n    // setIsPlaying(!prevValue)\n    // if(!prevValue){\n    //     audioPlayer.current.play()\n    // }\n    // else{\n    //     audioPlayer.current.pause()\n    // }\n    // setTimeout(() => {\n    //     console.log(\"time up!\")\n    //     setIsPlaying(false)\n    // }, 30000)\n  };\n\n  const togglePause = () => {\n    audioPlayer.current.pause();\n  };\n\n  useEffect(() => {}, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioPlayer,\n      src: props.preview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-circle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-track\",\n      onMouseOver: togglePlayPause,\n      onMouseOut: togglePause,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: props.songName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: props.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AudioPlayer, \"GqEP0mb5J9/6NBGC2e1ZYQxkTHo=\");\n\n_c = AudioPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"sources":["C:/Users/Mike/my-app/client/src/components/pages/meetstructure/AudioPlayer.js"],"names":["React","useContext","useState","useEffect","useRef","FaPlay","FaPause","UserContext","AudioPlayer","props","isPlaying","setIsPlaying","newAudioPlaying","setNewAudioPlaying","user","audioPlayer","togglePlayPause","current","play","togglePause","pause","preview","songName","artist"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAAA;;AAEtC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;AAEA,QAAMY,IAAI,GAAGb,UAAU,CAACM,WAAD,CAAvB;AAEA,QAAMQ,WAAW,GAAGX,MAAM,EAA1B;;AAEA,QAAMY,eAAe,GAAG,MAAM;AAC1BD,IAAAA,WAAW,CAACE,OAAZ,CAAoBC,IAApB,GAD0B,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEH,GAhBD;;AAkBA,QAAMC,WAAW,GAAG,MAAM;AACtBJ,IAAAA,WAAW,CAACE,OAAZ,CAAoBG,KAApB;AACH,GAFD;;AAIAjB,EAAAA,SAAS,CAAC,MAAI,CAIb,CAJQ,EAIN,CAACO,SAAD,CAJM,CAAT;AAOJ,sBACI;AAAA,4BACI;AAAO,MAAA,GAAG,EAAEK,WAAZ;AAAyB,MAAA,GAAG,EAAEN,KAAK,CAACY;AAApC;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,WAAW,EAAEL,eAAxC;AAAyD,MAAA,UAAU,EAAEG,WAArE;AAAA,8BACA;AAAA,kBAAKV,KAAK,CAACa;AAAX;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAKb,KAAK,CAACc;AAAX;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcC;;GApDuBf,W;;KAAAA,W","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from \"react\"\r\nimport { FaPlay } from \"react-icons/fa\"\r\nimport { FaPause } from \"react-icons/fa\"\r\nimport { UserContext } from \"../../../UserContext\"\r\n\r\nexport default function AudioPlayer(props){\r\n\r\n    const [isPlaying, setIsPlaying] = useState(false)\r\n    const [newAudioPlaying, setNewAudioPlaying] = useState(false)\r\n\r\n    const user = useContext(UserContext)\r\n\r\n    const audioPlayer = useRef()\r\n\r\n    const togglePlayPause = () => {\r\n        audioPlayer.current.play()\r\n        // const prevValue = isPlaying\r\n        // setIsPlaying(!prevValue)\r\n        // if(!prevValue){\r\n        //     audioPlayer.current.play()\r\n        // }\r\n        // else{\r\n        //     audioPlayer.current.pause()\r\n\r\n        // }\r\n        // setTimeout(() => {\r\n        //     console.log(\"time up!\")\r\n        //     setIsPlaying(false)\r\n        // }, 30000)\r\n\r\n    }\r\n\r\n    const togglePause = () => {\r\n        audioPlayer.current.pause()\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n    \r\n\r\n    }, [isPlaying])\r\n\r\n\r\nreturn(\r\n    <div>\r\n        <audio ref={audioPlayer} src={props.preview}>\r\n        </audio>\r\n            \r\n        <div className=\"play-circle\">\r\n\r\n        </div>\r\n        <div className=\"top-track\" onMouseOver={togglePlayPause} onMouseOut={togglePause}>\r\n        <li>{props.songName}</li>\r\n        <li>{props.artist}</li>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}