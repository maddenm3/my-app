{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mike\\\\my-app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport { useEffect, useState, useContext, useRef } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport axios from \"axios\";\nimport { accessToken, getCurrentUserProfile, getUserTopTracks, getUserTopArtists } from \"./spotify\";\nimport { catchErrors } from \"./utils\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LandingPage from \"./components/pages/LandingPage\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport findUser from \"./axios-api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [profilePhoto, setProfilePhoto] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [topTrack, setTopTrack] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [artistImage, setArtistImage] = useState(\"\");\n  const [artistId, setArtistId] = useState(\"\");\n  const [genre, setGenre] = useState([]);\n  const [previewUrl, setPreviewUrl] = useState(\"\");\n  const [albumCover, setAlbumCover] = useState(\"\");\n  const [isPlaying, setIsPlaying] = React.useState(false);\n  const [topSongs, setTopSongs] = useState([{\n    song: \"\",\n    artist: \"\",\n    albumCover: \"\",\n    preview: \"\"\n  }]);\n  const [similarArtists, setSimilarArtists] = useState(null);\n  const [points, setPoints] = useState(2);\n  const [currentlyPlaying, setCurrentlyPlaying] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [token, setToken] = useState(\"\");\n  const [justLoggedIn, setJustLoggedIn] = useState(false);\n  const componentIsMounted = useRef(true); // const navigate = useNavigate()\n  // useEffect(() => {\n  //   return() => {\n  //     componentIsMounted.current = false\n  //   }\n  // })\n\n  useEffect(() => {\n    window.history.pushState({}, null, \"/\");\n  }, [token]);\n  useEffect(() => {\n    setToken(accessToken);\n    setJustLoggedIn(true);\n    let isCancelled = false;\n\n    const fetchData = async () => {\n      try {\n        if (!isCancelled && token) {\n          // axios.defaults.baseURL = 'https://api.spotify.com/v1'\n          const {\n            data\n          } = await getCurrentUserProfile();\n          const fullName = data.display_name;\n          const nameArray = fullName.split(' ');\n          const firstName = nameArray[0];\n          setFirstName(firstName);\n          const profPic = data.images[0].url;\n          setProfilePhoto(profPic);\n          const location = data.country;\n          setCountry(location);\n          const userEmail = data.email;\n          setEmail(data.email);\n        }\n      } catch (e) {\n        if (!isCancelled) {\n          console.error(e);\n        }\n      }\n\n      try {\n        if (!isCancelled) {\n          // axios.defaults.baseURL = 'https://api.spotify.com/v1'\n          const {\n            data\n          } = await getUserTopTracks();\n          const key = 0;\n          setTopSongs(data.items);\n          const albumCover = data.items[key].album.images[0].url;\n          setAlbumCover(albumCover);\n          const myTrack = data.items[key].name;\n          setTopTrack(myTrack);\n          const myArtist = data.items[key].artists[0].name;\n          setArtist(myArtist);\n          const preview = data.items[key].preview_url;\n          setPreviewUrl(preview);\n          setTopTrack({\n            song: myTrack,\n            artist: myArtist,\n            albumCover: albumCover,\n            preview: preview\n          });\n        }\n      } catch (e) {\n        if (!isCancelled) {\n          console.error(e);\n        }\n      }\n\n      try {\n        if (!isCancelled) {\n          // axios.defaults.baseURL = 'https://api.spotify.com/v1'            \n          const {\n            data\n          } = await getUserTopArtists();\n          setArtist(data.items[0].name);\n          setGenre([data.items[0].genres[0], data.items[0].genres[1]]);\n          setArtistImage(data.items[0].images[0].url);\n          setArtistId(data.items[0].id);\n        }\n      } catch (e) {\n        if (!isCancelled) {\n          console.error(e);\n        }\n      }\n    };\n\n    catchErrors(fetchData());\n    return () => {\n      isCancelled = true;\n    };\n  }, []);\n  useEffect(() => {\n    let isCancelled = false;\n\n    const postData = async () => {\n      try {\n        if (!isCancelled) {\n          findUser.post('/', {\n            name: firstName,\n            email: email,\n            country: country,\n            photo: profilePhoto,\n            topTrack: topTrack,\n            artist: artist,\n            artistImage: artistImage,\n            genre: genre\n          });\n        }\n      } catch (error) {\n        if (!isCancelled) {\n          console.log(error);\n        }\n      }\n    };\n\n    postData();\n    return () => {\n      isCancelled = true;\n    };\n  }, []);\n  const user = {\n    token: token,\n    firstName: firstName,\n    profilePhoto: profilePhoto,\n    country: country,\n    topSongs: topSongs,\n    topTrack: topTrack,\n    artist: artist,\n    artistImage: artistImage,\n    artistId,\n    genre: genre,\n    preview: previewUrl,\n    albumCover: albumCover,\n    isPlaying: isPlaying,\n    similarArtists: similarArtists,\n    points: points\n  };\n\n  function ErrorHandler(_ref) {\n    let {\n      error\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"An error occured\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  }\n\n  return !token ? /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      FallbackComponent: ErrorHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n          value: user && user,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main\",\n            children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VaO5lEzaiJq1lUvsSDsWtPtEKLY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Mike/my-app/client/src/App.js"],"names":["React","Header","Main","useEffect","useState","useContext","useRef","UserContext","axios","accessToken","getCurrentUserProfile","getUserTopTracks","getUserTopArtists","catchErrors","BrowserRouter","Router","LandingPage","ErrorBoundary","findUser","App","firstName","setFirstName","profilePhoto","setProfilePhoto","country","setCountry","topTrack","setTopTrack","artist","setArtist","artistImage","setArtistImage","artistId","setArtistId","genre","setGenre","previewUrl","setPreviewUrl","albumCover","setAlbumCover","isPlaying","setIsPlaying","topSongs","setTopSongs","song","preview","similarArtists","setSimilarArtists","points","setPoints","currentlyPlaying","setCurrentlyPlaying","email","setEmail","token","setToken","justLoggedIn","setJustLoggedIn","componentIsMounted","window","history","pushState","isCancelled","fetchData","data","fullName","display_name","nameArray","split","profPic","images","url","location","userEmail","e","console","error","key","items","album","myTrack","name","myArtist","artists","preview_url","genres","id","postData","post","photo","log","user","ErrorHandler","message"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Header from \"./components/Header\"\nimport Main from \"./components/Main\"\nimport { useEffect, useState, useContext, useRef } from \"react\"\nimport { UserContext } from \"./UserContext\"\nimport axios from \"axios\"\nimport { accessToken, getCurrentUserProfile, getUserTopTracks, getUserTopArtists } from \"./spotify\"\nimport { catchErrors } from \"./utils\"\nimport { BrowserRouter as Router} from \"react-router-dom\"\nimport LandingPage from \"./components/pages/LandingPage\"\nimport { ErrorBoundary } from \"react-error-boundary\"\nimport findUser from \"./axios-api\"\n\nexport default function App(){\n  const [firstName, setFirstName] = useState(\"\")\n  const [profilePhoto, setProfilePhoto] = useState(\"\")\n  const [country, setCountry] = useState(\"\")\n  const [topTrack, setTopTrack] = useState(\"\")\n  const [artist, setArtist] = useState(\"\")\n  const [artistImage, setArtistImage] = useState(\"\")\n  const [artistId, setArtistId] = useState(\"\")\n  const [genre, setGenre] = useState([])\n  const [previewUrl, setPreviewUrl] = useState(\"\")\n  const [albumCover, setAlbumCover] = useState(\"\")\n  const [isPlaying, setIsPlaying] = React.useState(false)\n  const [topSongs, setTopSongs] = useState([{\n    song: \"\",\n    artist: \"\",\n    albumCover: \"\",\n    preview: \"\"\n  }])\n\n  const [similarArtists, setSimilarArtists] = useState(null)\n  const [points, setPoints] = useState(2)\n  const [currentlyPlaying, setCurrentlyPlaying] = useState(null)\n  const [email, setEmail] = useState(null)\n  const [token, setToken] = useState(\"\")\n  const [justLoggedIn, setJustLoggedIn] = useState(false)\n\n\n  const componentIsMounted = useRef(true)\n\n  // const navigate = useNavigate()\n\n  // useEffect(() => {\n  //   return() => {\n  //     componentIsMounted.current = false\n  //   }\n  // })\n\n  useEffect(()=>{\n    window.history.pushState({}, null, \"/\")\n\n\n  },[token])\n  \n\n\n  useEffect(() => {\n    setToken(accessToken)\n    setJustLoggedIn(true)\n\n    let isCancelled = false\n\n    const fetchData = async () => {\n      try {\n        if(!isCancelled && token){\n          // axios.defaults.baseURL = 'https://api.spotify.com/v1'\n          const { data } = await getCurrentUserProfile()\n          const fullName = data.display_name\n          const nameArray = fullName.split(' ')\n          const firstName = nameArray[0]\n          setFirstName(firstName)\n          const profPic = data.images[0].url\n          setProfilePhoto(profPic)\n          const location = data.country\n          setCountry(location)\n          const userEmail = data.email\n          setEmail(data.email)\n        }\n        \n      } catch(e) {\n        if(!isCancelled){\n          console.error(e);\n        }\n      }\n      \n\n      try {\n        if(!isCancelled){\n            // axios.defaults.baseURL = 'https://api.spotify.com/v1'\n            const {data} = await getUserTopTracks()\n            const key = 0\n              setTopSongs(data.items)\n              const albumCover = data.items[key].album.images[0].url\n              setAlbumCover(albumCover)\n              const myTrack = data.items[key].name\n              setTopTrack(myTrack)\n              const myArtist = data.items[key].artists[0].name\n              setArtist(myArtist)\n              const preview = data.items[key].preview_url\n              setPreviewUrl(preview)\n              setTopTrack(\n                {\n                song: myTrack,\n                artist: myArtist,\n                albumCover: albumCover,\n                preview: preview\n              })      \n            }\n          }\n      catch(e) {\n        if(!isCancelled){\n          console.error(e)\n        }\n      }\n\n      try {\n        if(!isCancelled){\n            // axios.defaults.baseURL = 'https://api.spotify.com/v1'            \n            const {data} = await getUserTopArtists()\n            setArtist(data.items[0].name)\n            setGenre([data.items[0].genres[0], data.items[0].genres[1]])\n            setArtistImage(data.items[0].images[0].url)\n            setArtistId(data.items[0].id)\n\n          }\n        }\n      catch(e) {\n        if(!isCancelled){\n          console.error(e)\n        }\n      }\n\n    }\n\n    catchErrors(fetchData())    \n\n    return () => {\n      isCancelled = true\n    }\n\n  }, []);\n\n \n  useEffect(() => {\n\n    let isCancelled = false\n\n    const postData = async() => {\n      try{ \n        if(!isCancelled){\n          findUser.post('/', {\n          name: firstName,\n          email: email,\n          country: country,\n          photo: profilePhoto,\n          topTrack: topTrack,\n          artist: artist,\n          artistImage: artistImage,\n          genre: genre\n        })\n\n      }\n    } catch(error){\n\n      if(!isCancelled){\n        console.log(error)\n\n      }\n\n    }\n    }\n\n    postData()\n\n  return () => {\n    isCancelled = true\n  }\n\n\n\n  }, [])\n\n\n\n  const user = {\n    token: token,\n    firstName: firstName,\n    profilePhoto: profilePhoto,\n    country: country,\n    topSongs: topSongs,\n    topTrack: topTrack,\n    artist: artist,\n    artistImage: artistImage,\n    artistId,\n    genre: genre,\n    preview: previewUrl,\n    albumCover: albumCover,\n    isPlaying: isPlaying,\n    similarArtists: similarArtists,\n    points: points\n  }\n\n\n  function ErrorHandler({error}){\n    return(\n      <div role=\"alert\">\n        <p>An error occured</p>\n        <pre>{error.message}</pre>\n      </div>\n    )\n  }\n\n\n  return(\n    !token ? \n      <LandingPage />\n      :\n    <Router>\n      <ErrorBoundary FallbackComponent={ErrorHandler}>\n    <div className=\"wrapper\">\n    <UserContext.Provider value={user && user}>\n        <div>\n          <Header \n          />\n        </div>\n        <div className=\"main\">\n          \n          <Main \n            />\n        </div>\n    </UserContext.Provider>\n\n      </div>\n      </ErrorBoundary>\n    </Router>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}