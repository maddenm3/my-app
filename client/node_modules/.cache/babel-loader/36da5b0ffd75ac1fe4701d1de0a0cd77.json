{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Mike\\\\my-app\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useContext,useState,useEffect,useRef}from\"react\";import{FaPlay}from\"react-icons/fa\";import{FaPause}from\"react-icons/fa\";import{UserContext}from\"../../../UserContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AudioPlayer(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isPlaying=_useState2[0],setIsPlaying=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),newAudioPlaying=_useState4[0],setNewAudioPlaying=_useState4[1];var user=useContext(UserContext);var audioPlayer=useRef();var togglePlayPause=function togglePlayPause(){audioPlayer.current.play();// const prevValue = isPlaying\n// setIsPlaying(!prevValue)\n// if(!prevValue){\n//     audioPlayer.current.play()\n// }\n// else{\n//     audioPlayer.current.pause()\n// }\n// setTimeout(() => {\n//     console.log(\"time up!\")\n//     setIsPlaying(false)\n// }, 30000)\n};var togglePause=function togglePause(){audioPlayer.current.pause();};useEffect(function(){},[isPlaying]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"audio\",{ref:audioPlayer,src:props.preview}),/*#__PURE__*/_jsx(\"div\",{className:\"play-circle\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"top-track\",onMouseOver:togglePlayPause,onMouseOut:togglePause,children:[/*#__PURE__*/_jsx(\"li\",{children:props.songName}),/*#__PURE__*/_jsx(\"li\",{children:props.artist})]})]});}","map":{"version":3,"sources":["C:/Users/Mike/my-app/client/src/components/pages/meetstructure/AudioPlayer.js"],"names":["React","useContext","useState","useEffect","useRef","FaPlay","FaPause","UserContext","AudioPlayer","props","isPlaying","setIsPlaying","newAudioPlaying","setNewAudioPlaying","user","audioPlayer","togglePlayPause","current","play","togglePause","pause","preview","songName","artist"],"mappings":"2HAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,CAAiDC,MAAjD,KAA+D,OAA/D,CACA,OAASC,MAAT,KAAuB,gBAAvB,CACA,OAASC,OAAT,KAAwB,gBAAxB,CACA,OAASC,WAAT,KAA4B,sBAA5B,C,wFAEA,cAAe,SAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA2B,CAEtC,cAAkCP,QAAQ,CAAC,KAAD,CAA1C,wCAAOQ,SAAP,eAAkBC,YAAlB,eACA,eAA8CT,QAAQ,CAAC,KAAD,CAAtD,yCAAOU,eAAP,eAAwBC,kBAAxB,eAEA,GAAMC,CAAAA,IAAI,CAAGb,UAAU,CAACM,WAAD,CAAvB,CAEA,GAAMQ,CAAAA,WAAW,CAAGX,MAAM,EAA1B,CAEA,GAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1BD,WAAW,CAACE,OAAZ,CAAoBC,IAApB,GACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEH,CAhBD,CAkBA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBJ,WAAW,CAACE,OAAZ,CAAoBG,KAApB,GACH,CAFD,CAIAjB,SAAS,CAAC,UAAI,CAIb,CAJQ,CAIN,CAACO,SAAD,CAJM,CAAT,CAOJ,mBACI,oCACI,cAAO,GAAG,CAAEK,WAAZ,CAAyB,GAAG,CAAEN,KAAK,CAACY,OAApC,EADJ,cAII,YAAK,SAAS,CAAC,aAAf,EAJJ,cAOI,aAAK,SAAS,CAAC,WAAf,CAA2B,WAAW,CAAEL,eAAxC,CAAyD,UAAU,CAAEG,WAArE,wBACA,oBAAKV,KAAK,CAACa,QAAX,EADA,cAEA,oBAAKb,KAAK,CAACc,MAAX,EAFA,GAPJ,GADJ,CAcC","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from \"react\"\r\nimport { FaPlay } from \"react-icons/fa\"\r\nimport { FaPause } from \"react-icons/fa\"\r\nimport { UserContext } from \"../../../UserContext\"\r\n\r\nexport default function AudioPlayer(props){\r\n\r\n    const [isPlaying, setIsPlaying] = useState(false)\r\n    const [newAudioPlaying, setNewAudioPlaying] = useState(false)\r\n\r\n    const user = useContext(UserContext)\r\n\r\n    const audioPlayer = useRef()\r\n\r\n    const togglePlayPause = () => {\r\n        audioPlayer.current.play()\r\n        // const prevValue = isPlaying\r\n        // setIsPlaying(!prevValue)\r\n        // if(!prevValue){\r\n        //     audioPlayer.current.play()\r\n        // }\r\n        // else{\r\n        //     audioPlayer.current.pause()\r\n\r\n        // }\r\n        // setTimeout(() => {\r\n        //     console.log(\"time up!\")\r\n        //     setIsPlaying(false)\r\n        // }, 30000)\r\n\r\n    }\r\n\r\n    const togglePause = () => {\r\n        audioPlayer.current.pause()\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n    \r\n\r\n    }, [isPlaying])\r\n\r\n\r\nreturn(\r\n    <div>\r\n        <audio ref={audioPlayer} src={props.preview}>\r\n        </audio>\r\n            \r\n        <div className=\"play-circle\">\r\n\r\n        </div>\r\n        <div className=\"top-track\" onMouseOver={togglePlayPause} onMouseOut={togglePause}>\r\n        <li>{props.songName}</li>\r\n        <li>{props.artist}</li>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}