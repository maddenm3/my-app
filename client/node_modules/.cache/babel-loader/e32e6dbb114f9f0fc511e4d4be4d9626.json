{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mike\\\\my-app\\\\client\\\\src\\\\components\\\\pages\\\\meetpages\\\\Songs.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../../../UserContext\";\nimport { NavLink } from \"react-router-dom\";\nimport AudioPlayer from \"../meetstructure/AudioPlayer\";\nimport { RiRefreshFill } from \"react-icons/ri\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Songs() {\n  _s();\n\n  const user = useContext(UserContext);\n  const [userList, setUserList] = useState(null);\n  const genre = user.genre[0];\n  const accessToken = user.token;\n  const [similarSongs, setSimilarSongs] = useState(null);\n  const [similarArtists, setSimilarArtists] = useState(null);\n  const artistId = user.artistId;\n  const topSongs = user.topSongs;\n  const [recs, setRecs] = useState(null);\n  const [clicked, setClicked] = useState(false);\n  const [trackForRecs, setTrackForRecs] = useState(user.topTrack.id);\n  const [id, setId] = useState(0);\n\n  const getUsers = async () => {\n    try {\n      // axios.defaults.baseURL = process.env.REACT_APP_URL\n      const response = await axios.get(`${process.env.REACT_APP_URL}/users/limit`);\n      const data = response.data;\n      setUserList(data);\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    if (!isCancelled) {\n      // getUsers\n      getUsers();\n    }\n\n    return () => {\n      isCancelled = true;\n    };\n  }, []);\n\n  const getRecs = async () => {\n    try {\n      axios.defaults.baseURL = 'https://api.spotify.com/v1';\n      const response = await axios.get(`/recommendations?limit=10&seed_tracks=${user && topSongs[id].id}`);\n      setRecs(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    if (!isCancelled) {\n      // getSimilarSongs()\n      getRecs();\n    }\n\n    return () => {\n      isCancelled = true;\n    };\n  }, []);\n  useEffect(() => {\n    let isCancelled = false;\n\n    const getUsers = async () => {\n      try {\n        if (!isCancelled) {\n          axios.defaults.baseURL = process.env.REACT_APP_URL;\n          const response = await axios.get('/users');\n          const data = await response.data;\n          setUserList(data);\n        }\n      } catch (error) {\n        if (!isCancelled) {\n          console.log(error);\n        }\n      }\n    };\n\n    getUsers();\n    return () => {\n      isCancelled = true;\n    };\n  }, []);\n  const recommendations = recs && recs.tracks.map((track, index) => {\n    var _track$album$images$;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"my-top-five-album-cover\",\n        src: (_track$album$images$ = track.album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-info\",\n        children: [/*#__PURE__*/_jsxDEV(AudioPlayer, {\n          preview: track.preview_url,\n          songName: track.name,\n          artist: track.artists[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  });\n  const displaySongs = userList ? userList.map(item => {\n    var _item$topTrack, _item$topTrack2, _item$topTrack3, _item$topTrack4;\n\n    return item.email != null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/profile/${item._id}`,\n        className: \"nav-link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-tag\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo,\n            className: \"meet-header-photo\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this), item.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"my-top-five-album-cover\",\n          src: (_item$topTrack = item.topTrack) === null || _item$topTrack === void 0 ? void 0 : _item$topTrack.albumCover,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-info\",\n          children: [/*#__PURE__*/_jsxDEV(AudioPlayer, {\n            preview: (_item$topTrack2 = item.topTrack) === null || _item$topTrack2 === void 0 ? void 0 : _item$topTrack2.preview,\n            songName: (_item$topTrack3 = item.topTrack) === null || _item$topTrack3 === void 0 ? void 0 : _item$topTrack3.song,\n            artist: (_item$topTrack4 = item.topTrack) === null || _item$topTrack4 === void 0 ? void 0 : _item$topTrack4.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this)]\n    }, item._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 1\n  }, this);\n\n  const loadingDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display-container\",\n    children: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((i, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"user-tag-loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"loading-album-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-track\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"loading-tag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"general-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"general-container-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Recommendations for \", topSongs[id].name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"refresh-icon\",\n          onClick: getRecs,\n          children: /*#__PURE__*/_jsxDEV(RiRefreshFill, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-container\",\n        children: recs ? recommendations : loadingDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"general-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"general-container-title\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Top Songs on MelodyMeet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: userList && userList.length < 5 ? \"left-container\" : \"display-container\",\n        children: userList ? displaySongs : loadingDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Songs, \"bakKaWFbGbvywJPvucPugr5TjqM=\");\n\n_c = Songs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["C:/Users/Mike/my-app/client/src/components/pages/meetpages/Songs.js"],"names":["axios","React","useState","useEffect","useContext","UserContext","NavLink","AudioPlayer","RiRefreshFill","Songs","user","userList","setUserList","genre","accessToken","token","similarSongs","setSimilarSongs","similarArtists","setSimilarArtists","artistId","topSongs","recs","setRecs","clicked","setClicked","trackForRecs","setTrackForRecs","topTrack","id","setId","getUsers","response","get","process","env","REACT_APP_URL","data","console","log","error","isCancelled","getRecs","defaults","baseURL","recommendations","tracks","map","track","index","album","images","url","preview_url","name","artists","displaySongs","item","email","_id","photo","albumCover","preview","song","artist","loadingDisplay","i","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAAQC,OAAR,QAAuB,kBAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,aAAR,QAA4B,gBAA5B;;AAIA,eAAe,SAASC,KAAT,GAAgB;AAAA;;AAE/B,QAAMC,IAAI,GAAGN,UAAU,CAACC,WAAD,CAAvB;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAMW,KAAK,GAAGH,IAAI,CAACG,KAAL,CAAW,CAAX,CAAd;AACA,QAAMC,WAAW,GAAGJ,IAAI,CAACK,KAAzB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,IAAD,CAApD;AACA,QAAMkB,QAAQ,GAAGV,IAAI,CAACU,QAAtB;AACA,QAAMC,QAAQ,GAAGX,IAAI,CAACW,QAAtB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAACQ,IAAI,CAACkB,QAAL,CAAcC,EAAf,CAAhD;AACA,QAAM,CAACA,EAAD,EAAKC,KAAL,IAAc5B,QAAQ,CAAC,CAAD,CAA5B;;AAGA,QAAM6B,QAAQ,GAAG,YAAY;AACzB,QAAG;AACK;AACA,YAAMC,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,aAAc,cAAvC,CAAvB;AACA,YAAMC,IAAI,GAAGL,QAAQ,CAACK,IAAtB;AACAzB,MAAAA,WAAW,CAACyB,IAAD,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAGP,KARD,CASA,OAAOG,KAAP,EAAa;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACJ,GAbD;;AAgBArC,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIsC,WAAW,GAAG,KAAlB;;AAEA,QAAI,CAACA,WAAL,EAAiB;AACb;AACAV,MAAAA,QAAQ;AACX;;AAID,WAAO,MAAM;AACTU,MAAAA,WAAW,GAAG,IAAd;AACH,KAFD;AAGH,GAdQ,EAcN,EAdM,CAAT;;AAiBA,QAAMC,OAAO,GAAG,YAAW;AAEvB,QAAG;AACK1C,MAAAA,KAAK,CAAC2C,QAAN,CAAeC,OAAf,GAAyB,4BAAzB;AACA,YAAMZ,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAN,CAAW,yCAAwCvB,IAAI,IAAIW,QAAQ,CAACQ,EAAD,CAAR,CAAaA,EAAG,EAA3E,CAAvB;AACAN,MAAAA,OAAO,CAACS,QAAQ,CAACK,IAAV,CAAP;AAGP,KAND,CAME,OAAMG,KAAN,EAAY;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACJ,GAXD;;AAaArC,EAAAA,SAAS,CAAC,MAAK;AACX,QAAIsC,WAAW,GAAG,KAAlB;;AAEA,QAAI,CAACA,WAAL,EAAiB;AACb;AACAC,MAAAA,OAAO;AAGV;;AAID,WAAO,MAAM;AACTD,MAAAA,WAAW,GAAG,IAAd;AACH,KAFD;AAIH,GAhBQ,EAgBN,EAhBM,CAAT;AAqBAtC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIsC,WAAW,GAAG,KAAlB;;AAEA,UAAMV,QAAQ,GAAG,YAAY;AAC3B,UAAG;AACC,YAAG,CAACU,WAAJ,EAAgB;AACdzC,UAAAA,KAAK,CAAC2C,QAAN,CAAeC,OAAf,GAAyBV,OAAO,CAACC,GAAR,CAAYC,aAArC;AACA,gBAAMJ,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAN,CAAU,QAAV,CAAvB;AACA,gBAAMI,IAAI,GAAG,MAAML,QAAQ,CAACK,IAA5B;AACAzB,UAAAA,WAAW,CAACyB,IAAD,CAAX;AACD;AACJ,OAPD,CAQA,OAAOG,KAAP,EAAa;AACX,YAAG,CAACC,WAAJ,EAAgB;AAEdH,UAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACF;AACF,KAfC;;AAiBET,IAAAA,QAAQ;AAER,WAAO,MAAM;AACTU,MAAAA,WAAW,GAAG,IAAd;AACH,KAFD;AAIH,GA1BM,EA0BJ,EA1BI,CAAT;AA8BA,QAAMI,eAAe,GAEpBvB,IAAI,IACDA,IAAI,CAACwB,MAAL,CAAYC,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAAA;;AAC9B,wBAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAyC,QAAA,GAAG,0BAAED,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,CAAF,yDAAE,qBAAuBC,GAArE;AAA0E,QAAA,GAAG,EAAC;AAA9E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI,QAAC,WAAD;AACA,UAAA,OAAO,EAAEJ,KAAK,CAACK,WADf;AAEA,UAAA,QAAQ,EAAEL,KAAK,CAACM,IAFhB;AAGA,UAAA,MAAM,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiBD;AAHzB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAA4BL,KAA5B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAmBH,GApBD,CAHJ;AA2BA,QAAMO,YAAY,GAId7C,QAAQ,GAAGA,QAAQ,CAACoC,GAAT,CAAcU,IAAD,IAAU;AAAA;;AAClC,WACIA,IAAI,CAACC,KAAL,IAAY,IAAZ,iBAEA;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,EAAE,EAAG,YAAWD,IAAI,CAACE,GAAI,EAAlC;AAAqC,QAAA,SAAS,EAAC,UAA/C;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEF,IAAI,CAACG,KAAf;AAAsB,YAAA,SAAS,EAAC,mBAAhC;AAAoD,YAAA,GAAG,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKH,IAAI,CAACH,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAyC,UAAA,GAAG,oBAAEG,IAAI,CAAC7B,QAAP,mDAAE,eAAeiC,UAA7D;AAAyE,UAAA,GAAG,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEQ;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI,QAAC,WAAD;AACA,YAAA,OAAO,qBAAEJ,IAAI,CAAC7B,QAAP,oDAAE,gBAAekC,OADxB;AAEA,YAAA,QAAQ,qBAAEL,IAAI,CAAC7B,QAAP,oDAAE,gBAAemC,IAFzB;AAGA,YAAA,MAAM,qBAAEN,IAAI,CAAC7B,QAAP,oDAAE,gBAAeoC;AAHvB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA,OAAUP,IAAI,CAACE,GAAf;AAAA;AAAA;AAAA;AAAA,YAHJ;AA0BH,GA3Bc,CAAH,gBA+BZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAnCA;;AAyCA,QAAMM,cAAc,gBAChB;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,cACK,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAsBlB,GAAtB,CAA0B,CAACmB,CAAD,EAAGjB,KAAH,KAAa;AACpC,0BACI;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;;AAsBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACY;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACI;AAAA,6CAAwB5B,QAAQ,CAACQ,EAAD,CAAR,CAAayB,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,OAAO,EAAEZ,OAAvC;AAAA,iCACI,QAAC,aAAD;AAAe,YAAA,SAAS,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADZ,eAOY;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACKpB,IAAI,GAAGuB,eAAH,GAAqBoB;AAD9B;AAAA;AAAA;AAAA;AAAA,cAPZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,+BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAGtD,QAAQ,IAAIA,QAAQ,CAACwD,MAAT,GAAgB,CAA7B,GAAkC,gBAAlC,GAAqD,mBAArE;AAAA,kBACKxD,QAAQ,GAAG6C,YAAH,GAAkBS;AAD/B;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBE;;GAnOsBxD,K;;KAAAA,K","sourcesContent":["import axios from \"axios\"\r\nimport React, { useState, useEffect, useContext } from \"react\"\r\nimport { UserContext } from \"../../../UserContext\"\r\nimport {NavLink } from \"react-router-dom\"\r\nimport AudioPlayer from \"../meetstructure/AudioPlayer\"\r\nimport {RiRefreshFill} from \"react-icons/ri\"\r\n\r\n\r\n\r\nexport default function Songs(){\r\n\r\nconst user = useContext(UserContext)   \r\nconst [userList, setUserList] = useState(null) \r\n\r\nconst genre = user.genre[0]\r\nconst accessToken = user.token\r\nconst [similarSongs, setSimilarSongs] = useState(null)\r\nconst [similarArtists, setSimilarArtists] = useState(null)\r\nconst artistId = user.artistId\r\nconst topSongs = user.topSongs\r\nconst [recs, setRecs] = useState(null)\r\nconst [clicked, setClicked] = useState(false)\r\nconst [trackForRecs, setTrackForRecs] = useState(user.topTrack.id)\r\nconst [id, setId] = useState(0)\r\n\r\n\r\nconst getUsers = async () => {\r\n    try{\r\n            // axios.defaults.baseURL = process.env.REACT_APP_URL\r\n            const response = await axios.get(`${process.env.REACT_APP_URL}/users/limit`)\r\n            const data = response.data\r\n            setUserList(data)\r\n            console.log(data)\r\n        \r\n\r\n    }\r\n    catch (error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\nuseEffect(() => {\r\n\r\n    let isCancelled = false\r\n\r\n    if (!isCancelled){\r\n        // getUsers\r\n        getUsers()\r\n    }\r\n\r\n    \r\n\r\n    return () => {\r\n        isCancelled = true\r\n    }\r\n}, [])\r\n\r\n\r\nconst getRecs = async() => {\r\n\r\n    try{\r\n            axios.defaults.baseURL = 'https://api.spotify.com/v1'\r\n            const response = await axios.get(`/recommendations?limit=10&seed_tracks=${user && topSongs[id].id}`)\r\n            setRecs(response.data)\r\n\r\n\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nuseEffect(()=> {\r\n    let isCancelled = false\r\n\r\n    if (!isCancelled){\r\n        // getSimilarSongs()\r\n        getRecs()\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    return () => {\r\n        isCancelled = true\r\n    }\r\n\r\n}, [])\r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    let isCancelled = false\r\n\r\n    const getUsers = async () => {\r\n      try{\r\n          if(!isCancelled){\r\n            axios.defaults.baseURL = process.env.REACT_APP_URL \r\n            const response = await axios.get('/users')\r\n            const data = await response.data\r\n            setUserList(data)\r\n          }\r\n      }\r\n      catch (error){\r\n        if(!isCancelled){\r\n\r\n          console.log(error)\r\n      }\r\n    }\r\n  }\r\n\r\n      getUsers()\r\n\r\n      return () => {\r\n          isCancelled = true\r\n      }\r\n\r\n  }, [])\r\n\r\n\r\n  \r\nconst recommendations =\r\n\r\n(recs &&\r\n    recs.tracks.map((track, index) => {\r\n        return(\r\n\r\n            <div className=\"track\" key={index}>\r\n                <img className=\"my-top-five-album-cover\" src={track.album.images[0]?.url} alt=\"\"/>\r\n                <div className=\"song-info\">\r\n                    <AudioPlayer \r\n                    preview={track.preview_url}\r\n                    songName={track.name}\r\n                    artist={track.artists[0].name}\r\n                    />\r\n                    <div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                </div>\r\n\r\n\r\n        )\r\n    })\r\n)\r\n\r\n\r\nconst displaySongs = \r\n\r\n(\r\n    \r\n    userList ? userList.map((item) => {\r\n    return(\r\n        item.email!=null &&\r\n\r\n        <div key={item._id}>\r\n            <NavLink to={`/profile/${item._id}`} className=\"nav-link\">\r\n                <div className=\"user-tag\">\r\n                    <img src={item.photo} className=\"meet-header-photo\" alt=\"\"/>\r\n                    {item.name}\r\n                </div>\r\n            </NavLink>\r\n\r\n            <div className=\"track\">\r\n                <img className=\"my-top-five-album-cover\" src={item.topTrack?.albumCover} alt=\"\"/>\r\n                    <div className=\"song-info\">\r\n                        <AudioPlayer \r\n                        preview={item.topTrack?.preview}\r\n                        songName={item.topTrack?.song}\r\n                        artist={item.topTrack?.artist}\r\n                        />\r\n                        <div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n)\r\n:\r\n<div>\r\n    Loading...\r\n</div>\r\n\r\n)\r\n\r\nconst loadingDisplay = (\r\n    <div className=\"display-container\">\r\n        {[0,1,2,3,4,5,6,7,8,9].map((i,index) => {\r\n            return(\r\n                <div key={index}>\r\n                    <li className=\"user-tag-loading\"></li>\r\n                    <img className=\"loading-album-cover\"/>\r\n                    <div className=\"top-track\">\r\n                        <li className=\"loading-tag\"></li>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        )\r\n}\r\n    </div>\r\n)\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <div className=\"page\">\r\n        <div className=\"general-container\">\r\n                    <div className=\"general-container-title\">\r\n                        <p>Recommendations for {topSongs[id].name}</p>\r\n                        <div className=\"refresh-icon\" onClick={getRecs}>\r\n                            <RiRefreshFill className=\"icon\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"display-container\">\r\n                        {recs ? recommendations : loadingDisplay}\r\n                    </div>\r\n                </div>\r\n        <div className=\"general-container\">\r\n            <div className=\"general-container-title\">\r\n\r\n                <p>Top Songs on MelodyMeet</p>\r\n            </div>\r\n            <div className={(userList && userList.length<5) ? \"left-container\" : \"display-container\"}>\r\n                {userList ? displaySongs : loadingDisplay}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)}"]},"metadata":{},"sourceType":"module"}