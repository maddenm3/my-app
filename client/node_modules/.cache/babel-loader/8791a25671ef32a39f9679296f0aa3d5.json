{"ast":null,"code":"/**\r\n * Higher-order function for async/await error handling\r\n * @param {function} fn an async function\r\n * @returns {function}\r\n */export var catchErrors=function catchErrors(fn){return function(){return fn.apply(void 0,arguments).catch(function(err){console.error(err);});};};","map":{"version":3,"sources":["C:/Users/Mike/my-app/client/src/utils.js"],"names":["catchErrors","fn","catch","err","console","error"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GACC,MAAO,IAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,EAAE,CAAI,CAC9B,MAAO,WAAkB,CACvB,MAAOA,CAAAA,EAAE,MAAF,mBAAYC,KAAZ,CAAkB,SAACC,GAAD,CAAS,CAChCC,OAAO,CAACC,KAAR,CAAcF,GAAd,EACD,CAFM,CAAP,CAGD,CAJD,CAKD,CANK","sourcesContent":["/**\r\n * Higher-order function for async/await error handling\r\n * @param {function} fn an async function\r\n * @returns {function}\r\n */\r\n export const catchErrors = fn => {\r\n    return function(...args) {\r\n      return fn(...args).catch((err) => {\r\n        console.error(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  "]},"metadata":{},"sourceType":"module"}